\chapter{Operatori Puntuali}
Tutte le tecniche di Image Processing che discuteremo in questo capitolo sono implementate nel 
\textbf{Dominio Spaziale}, ovvero il piano contenente i \textbf{pixel} di un'immagine.
Le tecniche che introdurremo operano direttamente su i pixel, a differenza dell'elaborazione nel dominio
delle Frequenze, nel quale le operazioni sono effettuate sulla trasformata di Fourier di un'immagine invece che sull'immagine stessa.

\paragraph{Enhancement}
Anche se i metodi di Filtraggio Spaziale\footnote{Spacial Filtering o Operatori Locali } e Intensity Trasformation\footnote{Operatori Puntuali}
hanno moltissime applicazioni, noi ci concentreremo sull'\textbf{Enhancement} delle immagini.

L'Enhancement è un operazione di Image Processing a basso livello possibile sia nel dominio spaziale che nel domino delle Frequenze
ed è il processo di manipolazione di un immagine per far si che il risultato sia migliore dell'originale per una \textbf{specifica applicazione}.
Diamo enfasi alla parola \emph{specifica}, dato che le tecniche di enhancement sono \textbf{problem oriented}.


\section{Gli Operatori sulle Immagini}
Nel miglioramento (enhancement) delle immagini si possono applicare diversi operatori:
\begin{itemize}
    \item \textbf{Operatori Puntuali}, il valore di ogni pixel dell'immagine di uscita è in funzione solo del corrispondente
    pixel dell'immagine di ingresso.
    \item \textbf{Operatori Locali}, il valore di ogni pixel dell'immagine di uscita è in funzione dei valori del pixel di ingresso corrispondente e \emph{di un suo intorno locale di pixel}.

    \item \textbf{Operatori Globali}, i pixel dell'immagine di uscita dipendono dal valore di tutti i pixel dell'immagine di ingresso.
\end{itemize}

\subsection{Introduzione agli Operatori Locali}
I processi nel dominio spaziale che affrontiamo si basano sull'espressione:
\[g(x,y) = T[f(x,y)]\]
Dove $f(x,y)$ è l'immagine di input, $g(x,y)$ è l'immagine di output e
$T$ è un operatore di $f$ definito su un \emph{intorno} del punto $(x,y)$.

\begin{center}
    \includegraphics[width=.7\textwidth]{images/3.1-local_operators.png}
\end{center}
Tipicamente l'intorno (neighborhood) è rettangolare e centrato sul pixel $(x_0,y_0)$ ed è molto più piccolo dell'immagine,
però la sua forma e dimensione \emph{dipendono dall'applicazione}.
Nota che $T$ può anche essere applicato su una sequenza di immagini, per esempio per effettuare una somma.

\subsection{Gli operatori Puntuali}
L'intorno più piccolo possibile è di dimensione $1\times1$, in questo caso $T$ considera solo il valore di 
$(x,y)$, diventando di fatto un \textbf{Operatore Puntuale} o \emph{Intensitiy Transformation Function} (Manipolazioni della scala di grigio)
di forma:
\[s = T(r)\]
in cui, per semplicità di notazione, usiamo $s$ e $r$ per denotare rispettivamente l'intensità di $g$ (output) e $f$ (input) di un qualunque punto $(x,y)$.

\paragraph{Elaborazioni Puntuali Omogenee}
Il risultato di una elaborazione puntiale omoegenea dipende solo dal valore del pixel cui è applicata, per cui tali elaborazioni vengono anche dette manipolazioni della scala di grigio (o dei colori).
\\Se invece il risultato dell'elaborazione dipende anche dalla posizione del pixel dell'immagine si parla di elaborazioni puntuali \textbf{non omogenee}.
\\Alcune tipiche elaborazioni puntuali omogenee sono:
\begin{itemize}
    \item Aggiunta o sottrazione di una costante a tutti i pixel.
    \item Inversione della scala di grigi (negativo).
    \item Clipping.
    \item Modifiche del contrasto (trasformazioni lineari e non della scala dei grigi).
    \item Equalizzazione dell'istogramma.
    \item Presentazione falso in colore.
\end{itemize}

\subsection*{Operatori Puntuali Lineari}
Come abbiamo già detto un operatore puntuale calcola il valore di un pixel dell'immagine di uscita in funzione esclusivamente del valore
del corrispondente dell'immagine di ingresso.

Un operatore puntuale $h$ applicato all'immagine $f(n)$ è una funzione che è applicata identicamente ad ogni pixel creando una nuova immagine $g(n)$
Se l'operatore puntuale in questione è della forma:
\[ g(n) = P f(n) + L \]
Dove $P$ è un fattore di scala moltiplicativo e $L$ un fattore di offset,
allora è chiamato \textbf{Operatore Puntuale Lineare}.

\section{Alcuni Operatori Puntuali di base}
Le funzioni di Intensitiy Transformation sono tra le più semplici tecniche di IP.
In queste funzioni i valori di un pixel viene prima e dopo la trasformazione, che chiamiamo rispettivamente $r$ ed $s$, sono messi in relazione tramite la funzione $T$ che mappa i valori $r$ su quelli $s$.
\begin{center}
    \includegraphics[width=0.7\textwidth]{images/3.3-basic-intensity-transformations.png}
\end{center}

\paragraph{Look Up Tables} Siccome stiamo parlando di grandezze digitali, i valori di una 
Intensitiy Transformation Function sono generalmente mappati in una Look Up Table, che permette di associare
con migliore efficienza i valori di input e output.

\subsection{Contrast Stretching}
\begin{wrapfigure}{r}{0.3\textwidth}
    \centering
    \includegraphics[width=.3\textwidth]{images/3.2.a-contrast-stretching.png}
\end{wrapfigure}
Un esempio di elaborazione puntuale omogenea è quello del \emph{contrast stretching}.
In questo caso $T(r)$ prende la forma come nell'immagine.
\\Il risultato dell'applicazione della trasformazione ad ogni pixel in $f$ per generare il corrispondente pixel in $g$
sarebbe quello di produrre una \textbf{immagine di contrasto maggiore} dell'originale,
scurendo i livelli di intensità sotto a $k$ e schiarendo le intensità sopra a $k$.

\subsection{Thresholding o Binarizzazione}
In quest'altro esempio $T(r)$ produce un'immagine binaria, ponendo a $0$ (nero) tutti i livelli sotto $k$ e a $1$ (bianco) tutti quelli sopra a $k$.
%Pagina 121 libro cartaceo, Slide 10 lezione operatori puntuali 1. 
\begin{center}
    \includegraphics[width=.15\textwidth]{images/3.2.b-thresholding.png}
\end{center}

\subsection{I Negativi}
Il negativo di un'immagine con livelli di intensità nel range $[0,L-1]$, con $L$ numero di livelli (256 per una immagine in 8bit),
è ottenuto usando la \emph{Funzione di trasformazione Negativa}, che ha la forma:
\[ s = L -1 -r \]
Invertendo in valori di grigio di un'immagine digitale in questa maniera produce l'equivalente di un negativo fotografico.

%\subsection{Trasformazioni Logaritmiche} %To do, non credo sia di vitale importanza

\subsection{Gamma Correction}
La trasformazione potenza, anche detta \textbf{Gamma Correction}, è uno degli operatori puntuali più utilizzati.
Questa trasformazione è nella forma:
\[ s = cr^\gamma \]
Dove $c$ e $\gamma$ sono costanti positive.
Le curve power-law con valori frazionari di $\gamma$ mappano un range ristretto di valori scuri in ingresso in una gamma più ampia di valori in uscita, facendo l'opposto per i valori piu chiari.
\begin{center}
    \includegraphics[width=0.7\textwidth]{images/3.6-gamma-curves.png}
\end{center}
\paragraph{In parole povere} Quando facciamo una Gamma Correction con un valore di $\gamma < 1$, quindi frazionario,
stiamo "stretchando" gli scuri restringendo i chiari, viceversa se $\gamma > 1$.
Se $\gamma = 1$ invece, la funzione risultante sarà quella identità.

\subsection{Look-Up Table}
Diverse trasformazioni con diverse espressioni analitiche hanno dei costi computazionali variabili.

Per una generica immagine $1024\times1024$, un operatore puntuale applicato alla sola intensità richiederebbe più di un milione di volte la sequenza:
\begin{enumerate}
    \item Conversione intero-float.
    \item Calcolo dell'operatore.
    \item Conversione float-intero
\end{enumerate}
Questa implementazione è tutt'altro che efficiente, quindi si ricorre spesso alle \textbf{Look Up Table (LUT)}.
Una LUT è una tabella con tante entry quante sono i possibili valori di ingresso all'operazione.
In questa tabella viene associato ad ogni valore possibile di ingresso ([0,255]) un valore a cui è stato già applicato l'operatore in questione che verrà messo nell'immagine di Output.

\pagebreak

\section{L'Istogramma}
L'istogramma di un'immagine è un tipo di istogramma che rappresenta in modo grafico la \textbf{distribuzione
tonale} (livelli di grigio) \textbf{di un'immagine digitale} ovvero traccia il numero di pixel per ogni valore tonale.
\begin{center}
    \includegraphics[width=1\textwidth]{images/3.16-histogram.png}
\end{center}
L'analisi dell'istogramma fornisce generalmente utili informazioni sulle proprietà dell'immagine legate alle frequenza dei livelli di grigio.
L'informazione spaziale è persa, quindi da un istogramma non possiamo risalire alla posizione dei pixel nell'immagine.

\paragraph{Definizione Matematica}
Abbiamo $r_k$, per $k=0,1,...,L-1$ che denota le intensità di un'immagine $f(x,y)$ a $L$-livelli.
L'istogramma \textbf{Non Normalizzato} di $f$ è definito come:
\[  h(r_k) = n_k \text{ for } k=0,1,...,L-1 \]
Dove $n_k$ è il numero di pixel in $f$ con intensità $r_k$, e la suddivisone delle scale di intensità sono chiamate Histogram Bins.

\paragraph{Istogramma Normalizzato} 
L'istogramma normalizzato di $f$ è definito come:
\[ p(r_k) = \frac{h(r_k)}{MN} = \frac{n_k}{MN} \]
Dove $M$ e $N$ sono rispettivamente il numero di righe e colonne di un'immagine.
L'istogramma normalizzato è come l'istogramma, ma elimina la considerazione della dimensione dell'immagine poichè la 
somma dei valori $p(r_k)$ per ogni valore di $k$ è sempre 1.
In genere lavoreremo con gli istogrammi normalizzati, che chiameremo semplicemente istogrammi di immagine.

\paragraph{Cosa mi dice l'istogramma normalizzato?}
L'istogramma normalizzato rappresenta la \emph{frequenza di occupazione} dei livelli ed è interpretata come 
\emph{stima della probabilità di avere il valore $k$ nell'immagine}.
Gli istogrammi sono facili da computare e sono utilizzabili per rapide implementazioni hardware, rendendo 
le tecniche basate sugli istogrammi uno strumento molto utlizzato per l'Image Processing in Real Time.

\pagebreak
\subsection{Equalizzazione dell'istogramma}
L'equalizzazione dell'istogramma è una tecnica di image enhancement che tende ad \textbf{aumentare il contrasto dell'immagine}
mutando la forma dell'istogramma per bilanciare meglio i livelli, mantenendone però l'ordinamento.
\\Questa tecnica sfrutta il concetto alla base del contrast stretching, ovvero utilizzare più livelli possibili per accentuare il contrasto.
La sua comodità è il fatto che \textbf{non occorre specificare alcun parametro}, motivo che la rende una tecnica molto popolare, ma spesso abusata.
\\Per poter parlare di equalizzazione dell'istogramma dobbiamo prima introdurre l'istogramma Cumulativo.

\paragraph{Istogramma Cumulativo}
Abbiamo già introdotto l'istogramma normalizzato $P(k)=\frac{H(k)}{N}$ che rappresenta la frequenza di occupazione dei livelli, ovvero la stima della probabilità di avere il valore $k$,
Introduciamo ora l'istogramma cumulativo $A(k)$ così definito:
\[ A(k)= \sum_{j\leq k} P(j)\]
In cui la somma $\sum_{L} P(j) = 1$ con $N$ numero di livelli.
\\Questo istogramma indica la percentuale di pixel con livello di grigio $\leq k$, ovvero la stima della probabilità di avere un valore minore o uguale a $k$.

\begin{center}
    \includegraphics[width=1\textwidth]{images/cumulative-histogram.jpg}
\end{center}

\paragraph{Contrast stretching VS Equalizzazione}
Il contrast strestching tende a stirare l'istogramma senza mutarne la forma, mentre l'equalizzazione tende a mutare la forma dell'istogramma in modo da
ottenere una distribuzione il più possibile \textbf{a densità costante}.
Cerchiamo quindi di definire un'istogramma che mantenga l'ordine dei livelli di grigio, utilizzando una trasformazione strettamente monotona,
che sia \emph{il più piatto possibile} e sia definito sullo stesso range di valori, oltre che essere completamente automatica.

\subsubsection{Il funzionamento dell'equalizzazione} %Tradotto dal libro pagina 134 onwards
Supponendo valori di intensità continui, denotiamo con la variabile $r$ le intensità di un immagine che deve essere processata,
e assumiamo che $r$ sia nel range $[0,L-1]$\footnote{$r$ può anche essere normalizzato $r\in [0,1]$} con $r=0$ che rappresenta il colore nero e $r=L-1$ che rappresenta il colore bianco.
\\Per $r$ che soddisfa queste condizioni, poniamo l'attenzione su trasformazioni (intensity mappings) della forma:
\[ s = T(r) \; 0 \leq r \leq L-1\]
Che produce un valore di intensità di output $s$ per ogni valore $r$ nell'immagine di input.
\\Assumiamo che:
\begin{enumerate}
    \item $T(r)$ sia una funzione \textbf{Monotona Strettamente Crescente} nell'intervallo $[0,L-1]$
    \item $0\leq T(r) \leq L-1$ per $0\leq r \leq L-1$, ovvero $T(r)$ deve essere sempre dentro l'intervallo.
\end{enumerate}
In alcune formulazioni che verranno discusse tra poco, useremo la trasformazione inversa:
\[ r = T^{-1}(s) \; 0 \leq s \leq L-1\]
Che esattamente il motivo per cui è richiesto che $T(r)$ sia Strettamente Monotona, come dimostrato nella seguente immagine.
\begin{center}
    \includegraphics[width=1\textwidth]{images/3.16-monotonic-function.png}
\end{center}
Una funzione non strettamente monotona andrebbe bene quando stiamo mappando da $r$ a $s$, ma diventa problematica quando vogliamo recuperare i 
valori di $r$ unicamente dai valori mappati.

L'intensità di un immagine (quindi $r$ e $s$) possono essere viste come variabili random nell'intervallo $[0,L-1]$,
ed è possibile caratterizzarle medianti i rispettivi PDF\footnote{Probability Density Function, ovvero l'istogramma}:
\begin{center}
    $p_r(r)$ e $p_s(s)$
\end{center}
Dalla teoria della probabilità sappiamo che se $p_r(r)$ e $T(r)$ sono \textbf{note} e $T^{-1}$ è continua e differenzibile nel range,
allora il PDF della variabile mappata $s$ può essere ottenuto tramite:
\begin{equation}\tag{3.10}\label{eq:3.10}
     p_s(s)=p_r(r) \bigg | \frac{dr}{ds}\bigg|
\end{equation}
Difatti, dati gli intervalli $[r,r+dr]$ e $[s, s+ds]$, tutti i punti $[r,r+dr]$
devono essere trasformati in punti di  $[s,s+ds]$.
Ne segue che le aree, ovvero le probabilità, devono essere uguali.

Una funzione trasformazione particolarmente importante in IP è:
\begin{equation}\tag{3.11}\label{eq:3.11}
    s = T(r) = (L-1) \int_{0}^{r} p_r(w) dw
\end{equation}
Dove $w$ è una \emph{dummy variable} di integrazion.
L'integrale sulla destra è la \textbf{Funzione di Distribuzione Cumulativa} (CDF) di $r$.
Siccome i PDF sono sempre positivi, e l'integrale di una funzione è l'area sottesa, ne segue che questa funzione soddisfa la condizione (1), questo è perchè 
l'area sotto la funzione non può diminuire all'incrementare di $r$.
Quando il limite superiore in questa equazione è $r=(L-1)$, l'integrale diventa 1, come deve per un PDF,
rendendo il valore massimo di $s$ $(L-1)$, rispettando la seconda condizione.

Derivando $s$ rispetto a $r$ si ottiene, per la regola di Liebniz\footnote{The derivative of a definite integral with respect to its upper limit is the integrand evaluated at the limit}:
\[
    \frac{ds}{dr} = \frac{dT(r)}{dr}\]
    \[\to \frac{ds}{dr}= (L-1) \cdot \frac{d}{dr}[\int _{0}^{r} p_r(w) dw]\]
    \[\to \frac{ds}{dr}= (L-1)\cdot p_r(r)
\]
Sostituendo questo risultato per $\frac{dr}{ds}$\footnote{$\frac{ds}{dr} = (L-1)\cdot p_r(r) \implies \frac{dr}{ds}= \frac{1}{(L-1)\cdot p_r(r)}$}
 nell'equazione (3.10), e tenendo conto del fatto che tutti i valori di probabilità sono positivi\footnote{Permettendoci di rimuovere il valore assoluto}, da il risultato:
\[ p_s(s)=p_r(r) \bigg | \frac{dr}{ds}\bigg| \]
\[ \to p_s(s)=p_r(r) \bigg | \frac{1}{(L-1)\cdot p_r(r)}\bigg|\]
\[ \to p_s(s) = \frac{1}{L-1} \; \; \; 0 \leq s \leq L-1 \]
La densità di probabilità (PDF) della variabile trasformata è uniforme nel suo intervallo di efinizione, \emph{indipendentemente} dalla forma di $p_r(r)$
Da questo ne deriva un incremento nella gamma dinamica dei pixel che può avere notevoli effetti sulla "apparenza" dei pixel.
\begin{center}
    \includegraphics[width=1\textwidth]{images/3.18-uniform-pdf.png}
\end{center}
%Slide 97, pagina 137

\subsubsection{Equalizzazione nel caso Discreto}
Consideriamo ora il caso in cui stiamo lavorando con valori discreti, ovvero in $\N$, che è esattamente 
quello che succede in una immagine digitale.

Interpretiamo i livelli di grigio come una variabile aleatoria discreta.
Avremo che la probabilità di occorrenza dei livelli di grigio in una immagine digitale è approssimata dalla seguente formula:
\[ p_r(r_k) = \frac{n_k}{MN} \]
Dove $MN$ è il numero totale di pixel nell'immagine, e $n_k$ denota il numero di pixel che hanno intensità $r_k$.
Come sappiamo $p_r(r_k)$ è l'istogramma normalizzato.
La forma discreta della trasformazione in Eq 3.11, ovvero la funzione per l'equalizzazione dell'istogramma, diventa:
\[
    s_k = T(r_k)=(L-1)\sum_{j=0}^{k} p_r(r_j) \;\;\;\; k=0,1,2,...,L-1 
\]
Dove, come prima, $L$ è il numero di livelli di grigio possibili nell'immagine. 
Quindi la trasformazione consiste nel trasformare ogni pixel di livello $r_k$ in un pixel di livello $s_k$, attraverso la $T(r_k)$ che si calcola direttamente dall'istogramma dell'immagine di input.

\esempio{
    %Pagina 138
    Illustrazione delle meccaniche dell'equalizzazione dell'istogramma.
}

%Pagina di spiegazione #DumbItDown per l'istogramma.
\pagebreak
\newpagecolor{azzurrochiaro}\afterpage{\restorepagecolor}
\section{Dumb it Down: Histogram Equalization}

\pagebreak