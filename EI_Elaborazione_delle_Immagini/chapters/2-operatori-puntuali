\chapter{Operatori Puntuali}
Tutte le tecniche di Image Processing che discuteremo in questo capitolo sono implementate nel 
\textbf{Dominio Spaziale}, ovvero il piano contenente i \textbf{pixel} di un'immagine.
Le tecniche che introdurremo operano direttamente su i pixel, a differenza dell'elaborazione nel dominio
delle Frequenze, nel quale le operazioni sono effettuate sulla trasformata di Fourier di un'immagine invece che sull'immagine stessa.

\paragraph{Enhancement}
Anche se i metodi di Spatial Filtering e Intensity Trasformation hanno moltissime applicazioni,
noi ci concentreremo sull'\textbf{Enhancement} delle immagini.

L'Enhancement è un operazione di Image Processing a basso livello possibile sia nel dominio spaziale che nel domino delle Frequenze
ed è il processo di manipolazione di un immagine per far si che il risultato sia migliore dell'originale per una \textbf{specifica applicazione}.
Diamo enfasi alla parola \emph{specifica}, dato che le tecniche di enhancement sono \textbf{problem oriented}.


\section{Gli Operatori sulle Immagini}
Nel miglioramento (enhancement) delle immagini si possono applicare diversi operatori:
\begin{itemize}
    \item \textbf{Operatori Puntuali}, il valore di ogni pixel dell'immagine di uscita è in funzione solo del corrispondente
    pixel dell'immagine di ingresso.
    \item \textbf{Operatori Locali}, il valore di ogni pixel dell'immagine di uscita è in funzione dei valori del pixel di ingresso corrispondente e \emph{di un suo intorno locale di pixel}.

    \item \textbf{Operatori Globali}, i pixel dell'immagine di uscita dipendono dal valore di tutti i pixel dell'immagine di ingresso.
\end{itemize}

\subsection{Basi degli Operatori Locali}
I processi nel dominio spaziale che affrontiamo si basano sull'espressione:
\[g(x,y) = T[f(x,y)]\]
Dove $f(x,y)$ è l'immagine di input, $g(x,y)$ è l'immagine di output e
$T$ è un operatore di $f$ definito su un \emph{intorno} del punto $(x,y)$.

\begin{center}
    \includegraphics[width=.7\textwidth]{images/3.1-local_operators.png}
\end{center}
Tipicamente l'intorno (neighborhood) è rettangolare e centrato sul pixel $(x_0,y_0)$ ed è molto più piccolo dell'immagine,
però la sua forma e dimensione \emph{dipendono dall'applicazione}.
Nota che $T$ può anche essere applicato su una sequenza di immagini, per esempio per effettuare una somma.

\subsection{Gli operatori Puntuali}
L'intorno più piccolo possibile è di dimensione $1\times1$, in questo caso $T$ considera solo il valore di 
$(x,y)$, diventando di fatto un \textbf{Operatore Puntuale} o \emph{Intensitiy Transformation Function} (Manipolazioni della scala di grigio)
di forma:
\[s = T(r)\]
in cui, per semplicità di notazione, usiamo $s$ e $r$ per denotare rispettivamente l'intensità di $g$ (output) e $f$ (input) di un qualunque punto $(x,y)$.

\paragraph{Elaborazioni puntuali Omogenee}
Il risultato di una elaborazione puntiale omoegenea dipende solo dal valore del pixel cui è applicata, per cui tali elaborazioni vengono anche dette manipolazioni della scala di grigio (o dei colori).
\\Se invece il risultato dell'elaborazione dipende anche dalla posizione del pixel dell'immagine si paral di elaborazioni puntuali \textbf{non omogenee}.
\\Alcune tipiche elaborazioni puntuali omogenee sono:
\begin{itemize}
    \item Aggiunta o sottrazione di una costante a tutti i pixel.
    \item Inversione della scala di grigi (negativo).
    \item Clipping.
    \item Modifiche del contrasto (trasformazioni lineari e non della scala dei grigi).
    \item Equalizzazione dell'istogramma.
    \item Presentazione falso in colore.
\end{itemize}

\subsubsection{Contrast Stertching}
\begin{wrapfigure}{r}{0.3\textwidth}
    \centering
    \includegraphics[width=.3\textwidth]{images/3.2.a-contrast-stretching.png}
\end{wrapfigure}
Un esempio di elaborazione puntuale omogenea è quello del \emph{contrast stretching}.
In questo caso $T(r)$ prende la forma come nell'immagine.
\\Il risultato dell'applicazione della trasformazione ad ogni pixel in $f$ per generare il corrispondente pixel in $g$
sarebbe quello di produrre una \textbf{immagine di contrasto maggiore} dell'originale,
scurendo i livelli di intensità sotto a $k$ e schiarendo le intensità sopra a $k$.

\subsubsection{Thresholding o Binarizzazione}
\begin{wrapfigure}{l}{0.15\textwidth}
    \centering
    \includegraphics[width=.15\textwidth]{images/3.2.b-thresholding.png}
\end{wrapfigure}
In quest'altro esempio $T(r)$ produce un'immagine binaria, ponendo a $0$ (nero) tutti i livelli sotto $k$ e a $1$ (bianco) tutti quelli sopra a $k$.
%Pagina 121 libro cartaceo, Slide 10 lezione operatori puntuali 1. 

\section{Some Basic Intensity Transformation Functions}
Le funzioni di Intensitiy Transformation son o tra le più semplici tecniche di IP.
In queste funzioni i valori di un pixel viene prima e dopo la trasformazione, che chiamiamo rispettivamente $r$ ed $s$,
sono messi in relazione tramite la funzione $T$ che mappa i valori $r$ su quelli $s$.

\paragraph{Look Up Tables} Siccome stiamo parlando di grandezze digitali, i valori di una 
Intensitiy Transformation Function sono generalmente mappati in una Look Up Table, che permette di associare
con migliore efficienza i valori di input e output.


\subsection{I Negativi}
Il negativo di un immagine con livelli di intensità nel range $[0,L-1]$, con $L$ numero di livelli (256 per una immagine in 8bit),
è ottenuto usando la \emph{Funzione di trasformazione Negativa}, che ha la forma:
\[ s = L -1 -r \]
Invertendo in valori di grigio di un'immagine digitale in questa maniera produce l'equivalente di un negativo fotografico.

%\subsection{Trasformazioni Logaritmiche} %To do, non credo sia di vitale importanza

\subsection{Trasformazioni Potenziali: Gamma Correction}
La trasformazione potenza, anche detta \textbf{Gamma Correction}, è uno degli operatori puntuali più utilizzati.
Questa trasformazione è nella forma:
\[ s = cr^\gamma \]
Dove $c$ e $\gamma$ sono costanti positive.
le curve power-law con valori frazionari di $\gamma$ mappano un range ristretto
di valori scuri in ingresso in una gamma più ampia di valori in uscita, facendo l'opposto per i valori piu chiari.

\paragraph{In parole povere} Quando facciamo una Gamma Correction con un valore di $\gamma < 1$, quindi frazionario,
stiamo "stretchando" gli scuri restringendo i chiari, viceversa se $\gamma > 1$.
Se $\gamma = 1$ invece, la funzione risultante sarà quella identità.
%Aggiungere immagini di repertorio


\section{L'istogramma}
L'istogramma di un'immagine è un tipo di istogramma che rappresenta in modo grafico la \textbf{distribuzione
tonale} (livelli di grigio) \textbf{di un'immagine digitale} ovvero traccia il numero di pixel per ogni valore tonale.

L'analisi dell'istogramma fornisce generalmente utili informazioni sulle proprietà dell'immagine legate alle frequenza dei livelli di grigio.
L'informazione spaziale è persa, quindi da un istogramma non possiamo risalire alla posizione dei pixel nell'immagine.

\paragraph{Definzione Matematica}
Abbiamo $r_k$, per $k=0,1,...,L-1$ che denota le intensità di un'immagine $f(x,y)$ a $L$-livelli.
L'istogramma \textbf{Non Normalizzato} di $f$ è definito come:
\[  h(r_k) = n_k \text{ for } k=0,1,...,L-1 \]
Dove $n_k$ è il numero di pixel in $f$ con intensità $r_k$, e la suddivisone delle scale di intensità sono chiamate Histogram Bins.

\paragraph{Istogramma Normalizzato} 
L'istogramma normalizzato di $f$ è definito come:
\[ p(r_k) = \frac{h(r_k)}{MN} = \frac{n_k}{MN} \]
Dove $M$ e $N$ sono rispettivamente il numero di righe e colonne di un'immagine.
L'istogramma normalizzato è come l'istogramma, ma elimina la considerazione della dimensione dell'immagine poichè la 
somma dei valori $p(r_k)$ per ogni valore di $k$ è sempre 1.
In genere lavoreremo con gli istogrammi normalizzati, che chiameremo semplicemente istogrammi di immagine.

\paragraph{Cosa mi dice l'istogramma normalizzato?}
L'istogramma normalizzato rappresenta la \emph{frequenza di occupazione} dei livelli ed è interpretata come 
\emph{stima della probabilità di avere il valore $k$ nell'immagine}.