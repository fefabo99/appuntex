\chapter{Segmentazione delle immagini}
PDF: binarizzazione delle immagini.\\
Slide 3: ho un'immagine e voglio sapere quanti 0 e 1 ci sono. Dall'analisi dell'istogramma vedo due regioni, un picco per gli scuri (dove c'è l'oggetto) e un picco per i chiari (dove c'è lo sfondo).\\
L'istogramma \texttt{a} della slide 4 presenta due modi dominanti, l'istogramma \texttt{} della slide 4 presenta 3 modi dominanti, questa verrà ripresa più avanti.\\
Se si assume che - i pixel dell'immagine possano appartenere solo a due classi "finte" (sfondo, oggetti di interesse) - il livello di grigio dei pixel permetta di discriminare le due classi Allora e' possibile segmentare l'immagine mediante una soglia T Diversi valori di T determineranno un diverso assegnamento dei pixel dell'immagine alle due classi - Il risultato dipende fortemente dall'immagine (proprietà degli oggetti e condizioni di illuminazione)
Sopra ad una certa soglia classe 1 e sotto classe 2, o viceversa.\\

Il rumore influenza la segmentazione? Slide 7. Dipende dal rumore, slide 8: al centro poco rumore non cambia tanto l'istogramma, a destra con tanto rumore è inutilizzabile.\\
Che faccio? Tolgo il rumore, con un filtro gaussiano. Se non funziona? Uso un altro algoritmo di segmentazione. Lavorare sul pixel non basta. Faccio un sottocampionamento. Oppure "finestrelle": mediamente chiaro, mediamente scuro. Non c'è una soluzione unica.\\

Non ci sarà mai una soglia \textit{perfetta} per separare un oggetto dallo sfondo: di solito non basta mai un solo algoritmo. Parliamo di \textbf{sogliatura interattiva}.
\subsubsection{Sogliatura interattiva}
Slide 10.\\
- Tecnica interattiva - Si noti come il risultato dipende fortemente dalle proprietà degli oggetti dalle condizioni di illuminazione. - Supponendo esista, è possibile determinare la soglia globale ottimale automaticamente e manualmente?\\
Slide 11.\\
L'immagine è intrinsecamente binaria ma a causa della forte variazione dell'illuminazione nella scena i valori di
intensità non sono nettamente distinti nell'istogramma. Quindi questa immagine non è binarizzabile con una soglia globale. Comunque questa venga determinata: manualmente o automaticamente.
\subsubsection{Sogliatura automatica}
Analizzando l'istogramma è possibile determinare automaticamente la soglia per la binarizzazione. • Alcuni vantaggi associati all'impiego di un algoritmo di soglia automatica rispetto alla scelta manuale della soglia sono: – La scelta manuale della soglia richiedere tempo. – La scelta manuale è soggettiva. – La determinazione automatica permette di automatizzare il processo anche adattandosi a possibili variazioni dell'illuminazione. – Un possibile limite può essere il costo computazionale. – Un secondo, e forse più importante limite, è che non abbiamo una verifica del risultato.\\
equazione\\
Nella sua forma più generale si può esprimere così:\\
equazione, questa volta la T è la binarizzazione, non il filtraggio o l'enhancement\\
- Dove p(x,y) rappresenta una proprietà locale del pixel considerato. 
- La soglia è detta globale se T dipende solo da f(x,y), (solo funzione)
- la soglia è detta locale se dipende sia f(x,y) che da p(x,y) (funzione e intorno)
- la soglia è detta dinamica se dipende da (x,y) (solo posizione)

Il libro la slide 14 l'ha tolta perché la funzione presentata funziona un po' a fortuna.
\textbf{Metodo del P-tile}
- Si assume nota l'area o la percentuale dell'immagine occupata dagli oggetti e sceglie la soglia in base a tale valore. - Solitamente usato per segmentare pagine di testo (caratteri/sfondo) in applicazioni con documenti molto simili fra loro. 
Slide 15\\
Ha mostrato una slide del pdf degli operatori puntuali, la n° , sulla correzione puntuale dell'illuminazione.

Il \textbf{raffinamento iterativo} del valore di soglia 1) Si seleziona una soglia T (eg. valore medio). 2) Si segmenta l'immagine in base a T. 3) Si calcola il valore medio delle due classi/regioni (m1, m2) 4) Si seleziona una nuova soglia T= (m1 + m2
)/2
5) Si ripetono i passi 2, 3, 4 fino a quando i valori medi si stabilizzano.\\

Slide 17. Esempio dell'impronta difitale: come vengono riconosciute? Ci sono dei punti tipici, dette minuzie. Ciò che rende univoca l'impronta è la \textbf{disposizione} di queste minuzie (quando si parla di riconoscimento parziale, ci sono solo alcuni incroci tra queste minuzie). Ci si mette sempre tanto col confronto perché è sempre "manuale" nel senso che il programma che le confronta controlla ogni singolo collegamento.

\subsubsection{Sogliatura ad isteresi}
Slide 18.\\
Si usa una soglia T1 per estrarre il nucleo dell'oggetto.\\
La segmentazione viene raffinata tramite un'altra soglia T2>T1: 1) Si selezionano 2 soglie T1,T2 con T2>T1. 2) Si partiziona l'immagine in 3 classi (sotto la prima soglia sicuro class1, sopra la seconda sicuro classe 2, in mezzo guardo l'intorno): R1, contenente i pixel con livello di grigio =< T1. R2, contenente i pixel con T1< livello di grigio < T2. R3, contenente i pixel con livello di grigio >= T2. 3) Si visita ogni pixel (x,y) di R2 e se ha un vicino (w,z) in R1, allora si assegna (x,y) ad R1
4) Si ripete (3) finche' non ci sono più pixel da riassegnare. 5) I pixel (x,y) rimasti in R2 vengono assegnati alla classe R3
Un altro modo di classificare è vedere quale pixel ha più vicini, lo assegno a quella parte: metodo \textit{nearest neighbor} che vedremo.

\subsubsection{Sogliatura automatica-Otsu (1979)}
Idea di base: La scelta di un valore di soglia implica la suddivisione dei pixel dell'immagine in due gruppi. L'assunzione alla base dell'algoritmo e' che la soglia ottima sia quella che suddivide l'immagine nei due gruppi più possibile “omogenei” al loro interno. Il criterio di omogeneità può essere espresso mediante un parametro statistico, la varianza intra-gruppo σ
2WL'algoritmo di binarizzazione si basa sulla ricerca del valore di soglia che minimizza la grandezza la varianza intra-gruppo σ2W di seguito definita
Per ogni soglia t si definiscono due gruppi minori e maggiori di t di cui si puo' conoscere la varianza; lo scopo e' di rendere omogenei tali gruppi. Probabilità che un pixel appartenga ad uno dei due gruppi
Tante equazioni

A partire dalle relazioni precedenti è possibile definire la varianza intra-gruppo, in cui lo scarto quadratico di ciascun pixel è valutato rispetto al valor medio del gruppo cui appartiene.
E' la varianza intra-gruppo,(within-group variance) tanto più è piccola tanto più i due gruppi sono raggruppati “vicino” ai valori medi
la varianza intra-gruppo e' la somma da minimizzare, ossia bisogna valutare quale tra le possibili t minimizza la somma pesata delle varianze. La soglia migliore - quella che minimizza la varianza intra-gruppo - può essere cercata per tentativi (t = 1,...,L), ma e' piuttosto oneroso dal punto di vista computazionale: per ogni livello di grigio e' necessario calcolare μ1
, μ2
, σ2
1
, σ22e q1(q2= 1− q1). Si puo' ottimizzare la ricerca. 
Slide 23 commentata: tramite la statistica come migliorare quelle equazioni e migliorare il tempo evitanddo la varianza (credo).
Slide 24: esempio di applicazione dell'algoritmo di Otsu. In base alle condizioni di luce, l'algoritmo (senza parametri di addestramento) dà soglie diverse. Il problema sarà capire quando l'algoritmo funziona.

\section{Pre-filtering dell'immagine}
Slide 30. Vogliamo fare la binarizzazione dell'immagine. Meglio filtrare immagine o istogramma?\\
In questo caso mi interessa che esca bene l'immagine quindi la risposta è l'immagine.\\
Slide 35. In questo caso a destra l'istogramma presenta picchi dove vado a fitrare sugli edges.\\
Sta speed-runnando.\\
Cosa cambia fra slide 38 e 39 dove assegno una griglia all'immagine? Segmentata per regioni? Nella 39 dà problemi dove i quadranti prendono solo l'oggetto e non lo sfondo.\\
Non ho la certezza che vengano prese in modo da avere metà oggetto e metà sfondo. Come faccio?

\subsubsection{Sogliatura automatica - locale}
• Una possibile soluzione al problema consiste nell'assegnare il valore di soglia determinato per il blocco esclusivamente al punto centrale del blocco, e ricavare poi la soglia per tutti gli altri pixel dell'immagine mediante un procedimento di interpolazione. • In questo caso la soglia viene ad essere una funzione del punto, T = T(x, y). • Spesso, per ottenere una funzione T = T(x, y) maggiormente regolare si adotta una suddivisione dell'immagine in blocchi parzialmente sovrapposti (“overlapped partitioning ”). • La funzione T = T(x, y) può essere ricavata a partire dai valori assegnati ai punti centrali di ogni blocco mediante interpolazione bilineare: equazioni

\subsubsection{Sogliatura automatica - uso del gradiente}
Come faccio a segmentare quell'immagine?
Vedo (sui bordi dello sfondo dove non ci sono gli oggetti) che l'immagine ha un'illuminazione che va da destra a sinistra. Faccio cosa boh con Otsu e applico a tutta l'immagine? 


Su oggetti molto piccoli Otsu lavora male. come faccio a essere sicuro che le classi siano più o meno uguali? Base di conoscenza, in modo da poter usare lo strumento a mia disposizione o il suo contrario. 

Slide di 55-56 (ocr): esempio di sogliatura automatica locale. La 56 Soglia calcolata per ogni pixel soglia come il valore media relativo ad un intorno 7x7
Il testo viene abbastanza bene, lo sfondo malissimo. Perché? La binarizzazione rispetto ad un
intorno 7x7 dei pixel fallisce quando la finestra in esame comprende solamente pixel di sfondo. Ovvero quando non abbiamo due classi ma solamente una\dots

Ma ci interessa? NO, la vediamo solo noi, non è finalizzata alla fruizione umana.

• Posso avere una soglia distinta per ogni pixel dell'immagine il cui valore dipende delle caratteristiche dell'immagine in un blocco di dimensione opportuna centrato nel pixel. • Sussiste il problema della dimensione del blocco. Vengono scelti generalmente blocchi piccoli (5x5, 7x7, 9x9, \dots) al fine di limitare il carico computazionale dell'elaborazione. • Per limitare il carico computazionale, si adotta generalmente un metodo semplice per la determinazione automatica della soglia • L'uso di una soglia locale è particolarmente adeguato per immagini in cui c'è un'alta probabilità che in un blocco piccolo siano presenti sia pixel dell'oggetto sia pixel dello sfondo

Slide 58. 
L'algoritmo pu' lavorare per linee. Possibili diverse alternative Parametri (a,b, c,\dots) da trovare e Dimensione della finestra su cui calcolare le medie locali mxy e varianza locale ơxyo media globale immagini mG\\
A sinistra, al centro Otsu non funziona bene (crea effetto cannocchiale) mentre Thresholding funziona decentemente.\\
Sembra buono come algoritmo, ma ha un problema: dobbiamo trovare tutti i valori.\\
Una possibile soluzione sarebbe stimarli.


Nel caso tipo di skintone avremo bisogno di 6 soglie: rgb e chiedi a fabio.

% 31/10/2023 ha ripreso da qua e poi è andato avanti
\chapter{Segmentazione delle immagini per regioni}
Segmentazione definita come partizione S di I in un insieme di regioni R1, R2, \dots, Rn tali che:
equazione
Ovvero vero per una regione, vero per la sua adiacente, ma deve essere falso per la loro unione.
\subsection{Algoritmo di accrescimento di regioni (region growing)} 
Preso un pixel ("\textit{seed}"), se è simile agli 8 suoi vicini, vengono aggregati in una classe. Fino a quando certi criteri sono soddisfatti e sono i criteri di arresto.\\
Capita di avere un pixel che possa rientrare in più regioni, come faccio a scegliere quale regione prendere?

\subsubsection{Criteri di accrescimento di regioni}
Due:
\begin{itemize}
    \item varianza
    \item scostamento massimo
\end{itemize}
se l'illuminazione non è uniforme, la boh si sposta e io continuo a accrescere creando un effetto di trascinamento. Nelle immagini a colori basta considerare la crominanza per evitare questo effetto di trascinamento nel caso di illuminazione non uniforme.

\subsection{Split and merge}
L'intera immagine viene considerata come una singola regione e viene applicato un criterio di \textit{split} per suddividere l'immagine in regioni via via più piccole.\\
Ad ogni livello di suddivisione, il predicato P viene verificato per tutte le parti divise (splittate): se esso risulta falso, la parte viene ulteriormente suddivisa, e così via.\\
Si fondono le parti adiacenti con caratteristiche simili, per costruire regioni più grandi che continuano a soddisfare i criteri previsti dalla segmentazione.\\
Rischiamo che come l'ha chiamato? sovrasegmentazione?\\
Questo produce delle immagini non perfette, dai contorni squadrettati. In alcune applicazioni può essere utile, sicuro non ad es. in immagini mediche, ma fa l'es. dell'isola di plastica nell'oceano.\\
Si va a creare un quadtree.\\
Slide successiva: fase di merge.

Cosa produce? Un'immagine squadrettata. Di certo non va bene per stimare i contorni più o meno precisi di un'immagine, ma va bene per stimare cose grandi tipo una chiazza di petrolio nell'oceano.

\subsubsection{Osservazioni del split and merge}
Osservazioni Il criterio di splitting può essere diverso dal criterio di merging. La forma delle regioni
potrebbe essere anche diversa Problemi - Il merging non deve dipendere dall’ordine con cui
valuto le similarità fra le regioni
- I contorni possono risultare seghettati.
- Aggiornamento delle descrizioni (è sempre necessario riconsiderare tutti i pixel ?)
Vantaggi
Per il merging si possono definire strategie complesse ed articolate che, ad esempio: - fondono regioni con caratteristiche simili; - eliminano edge non forti; - sfruttano proprietà topologiche delle regioni; - sfruttano informazioni sulla forma degli oggetti.

\subsubsection{Esempio di split and merge}
Un esempio sarebbe quello della super nova, dove vogliamo stimare la zona di detriti gassosi intorno. Slide 18.
Se la varianza era superiore ad una certa soglia e la media all'interno di un certo intervallo, lo considero omogeneo ad un certo filtro. Altrimenti no.\\
In immagini con regioni, posso valutare in modo diverso in regioni diverse: es. split dentro e merge sui bordi? Oppure scegliere le regioni in base a boh i bordi?
Lo split and merge si può fare anche con i diagrammi di Voronoi: si buttano seed (?) a caso nell'immagine e si segmenta in base a quello.

\subsection{Segmentazione per regioni}
\subsubsection{Criterio di splitting}
Arresto lo splitting quando il colore medio delle sotto-regioni non cambia. Equazione slide 24.\\
Più alto è il valore di soglia (vicino ad 1), più stretto è il criterio di omogeneità.\\
Ovvero, fermo lo splitting quando le sotto-regioni hanno le stesse caratteristiche della regione madre.

\subsubsection{Criterio di merging}
Distanza di Fisher, tengo conto non solo della media ma anche della numerosità e della varianza delle regioni, equazione slide 25.\\

\subsubsection{Raffinamento dei bordi}
I pixel di frontiera vengono riassegnati mediante region growing (i pixel sul bordo vengono riassegnati).

Slide 26: esempio.\\
Cosa ci dice? Possiamo costruire l'algoritmo in base alle proprie esigenze. Quando lo facciamo? Quando i nostri strumenti non risolvono il nostro problema. Però bisogna \textbf{sempre} partire da una baseline.

\subsection{Grafo delle adiacenze}
Slide 27-32.\\
Slide 27-28: non c'è sul libro ma su MatLab (slide 32) quindi ha aggiunto.\\
Procedere in parallelo non aiuta, rischio sovrasegmentazione: separo cose che non vanno separate.\\
Come funziona? Separo in regioni, a ciascuna associo un nodo. Se due regioni sono adiacenti, collego i nodi. Ad ogni nodo posso associare una descrizione della regione. Ad ogni link delle proprietà comuni alle regione. Come posso velocizzare? Associando i minimi locali.\\
Per garantire che non si creino fusioni inconsistenti, assumendo che gli archi siano etichettati con la similarità:
\begin{itemize}
    \item si fondono solo due regioni alla volta, e si aggiorna il grafo delle adiacenze (connessioni, proprietà dei nodi, degli archi).
    \item Il processo è iterato fino a che non è più possibile fondere regioni.
\end{itemize}
Tipi di feature associabili a:
\begin{description}
    \item[un nodo del grafo:] varianza della regione, intensità, varianza del gradiente, centroide, coordinate Max e Min di una regione, dimensione, lunghezza/altezza bounding box, perimetro, bimodalità dell'istogramma, uniformità, contrasto,...
    \item[un arco grafo:] perimetro condiviso, forza del gradiente, similarità,... 
\end{description}

\subsection{Segmentazione per regioni}
I metodi basati solo sulle proprietà locali dei pixel (e.g. colore) possono dare luogo segmentazioni rumorose od imprecise.\\
I criteri di omogeneità usati nei metodi devono essere definiti e spesso i relativi parametri sono trovati euristicamente. Per ovviare a questi problemi 
\begin{itemize}
    \item diversi algoritmi possono essere combinati in sequenza 
    \item la iniziale segmentazione per regione può essere impostata per ottenere una sovrasegmentazione può essere iterativamente raffinata, tenendo conto della similarità dei pixel e della loro vicinanza spaziale, allo scopo di eliminare i falsi contorni e le regioni spurie
\end{itemize}

\section{Segmentazione di immagini a colori mediante analisi di istogrammi}
\subsection{Segmentazione delle singole bande RGB}
Ogni banda colore RGB è considerata una immagine a livelli di grigio.\\
Si usano le tecniche messe a punto per le immagini a livello di grigio.\\
Il risultato finale è l'intersezione delle singole segmentazioni.
\subsubsection{Problemi}
•Si possono creare regioni spurie
•RGB spazio non ottimale

\subsection{Sogliatura automatica - modi}
\begin{enumerate}
    \item Si smussa l'istogramma.
    \item Si determinano i picchi più elevati dell'istogramma Hche sono distanti tra loro per almeno una certa quantità.
    \item Si usa il punto più basso tra fra i picchi come soglia.\\
    \begin{itemize}
        \item la distanza tra picco e valle è ignorata;
        \item approccio generalizzabile al caso di n oggetti.
    \end{itemize}
\end{enumerate}

\subsection{Smoothing dell'istogramma}
Lo smoothing viene eseguito per mezzo di una convoluzione tra la sequenza originale h(i)
e quella di smoothing S(k). L'istogramma smussato è ottenuto con la seguente formula: slide 37

\subsubsection{Smoothing gaussiano dell'istogramma}
Lo smoothing gaussiano dell'istogramma consente di “levigare” un istogramma applicando ad esso una convoluzione con una distribuzione gaussiana. Slide 38 per l'equazione. Si chiama scale space, filtraggio sempre maggiore del segnale.\\
Slide 39 zero-crossing della derivata prima. Grazie a quest'ultima trovo valli e picchi.\\
Se nell'intorno di uno zero il segno della derivata varia da negativo a positivo, allora tale punto identifica una valle, altrimenti un picco. 
Slide 41 zero-crossing della derivata seconda. Se nell'intorno di uno zero della derivata seconda si ha una variazione di segno da positivo a negativo, essa individua una valle sinistra; viceversa, se si ha una variazione da segno negativo a positivo, si è localizzata una valle destra. Per ogni coppia di valli, sinistra e destra, si calcolano i valori dell'istogramma originale per i punti tra esse compresi e si sceglie come locazione del picco il punto per cui l'altezza dell'istogramma è massima. 

\subsubsection{Scale space dell'istogramma}
Inserisci slide 43 tutta equazioni.\\
Smussando le valli e i picchi tendono a spostarsi un pochino.\\
Di solito non si visualizza direttamente lo scale-space di un segnale; si rappresenta invece un'immagine binaria costituita dagli zero-crossing della derivata prima o della derivata seconda nello scale-space. Tale rappresentazioni sono dette "finger-print". Gli zero-crossing sono i punti in cui la derivata prima o seconda del segnale continuo si annullano.\\
Esiste un’altra specifica motivazione per cui si utilizza il kernel gaussiano: la stabilità
degli zero-crossing della derivata del segnale convoluto, cioè al decrescere di possono
comparire nuovi zero-crossing nel “fingerprint” dello scale-space, senza che quelli già
esistenti scompaiano.
Solo la convoluzione con una distribuzione gaussiana soddisfa questa condizione. Slide 45.\\
L'idea è scelgo un tau, e lo applico a tutti i livelli di smoothing e picchi si spostano un pochino. Scendendo trovo i valori soglia. Slide 46.\\ Modo per trovare i picchi e le soglie corrette.\\
Recap: smusso, calcolo der I e der II (pixel prima, pixel dopo), trovo gli zeri e questi ultimi mi permettono di calcolare il picco.\\
\textbf{Spiegone di ciò che è stato detto a voce:}\\
Lo smoothing gaussiano produce due effetti:
- una semplificazione qualitativa
- ed una distorsione della funzione operata.
Quest'ultimo è un inconveniente che può essere superato grazie ad una tecnica che prende il nome di "Coarse to Fine Tracking". Questa prevede che l'identificazione di un certo evento, picco o valle o cambio di concavità, avvenga con l'utilizzo di una scala grossolana (alto), mentre la localizzazione, che fissa la corretta posizione degli zero-crossing, è determinato dall'inseguimento ("tracking") del contorno di uno zero, a partire dai punti individuati alla scala “grezza”,
fino ai corrispondenti che giacciono sul piano fissato da $\tau=1$.

\section{Modelli del colore}
Scopo di un modello del colore è di consentirne la rappresentazione con modalità
standardizzate, che fanno normalmente riferimento ad un sistema di coordinate 3-D, o meglio ad un suo sotto-spazio, nel quale ogni colore è rappresentato da un puntoI modelli del colore più utilizzati in image processing sono orientati o all'hardware (RGB, CMY), alla trasmissione (YUV, YIQ) e compressione (YCbCr), ed alla elaborazione “intuitiva” (HSI, HSV, ...)
Problema: troppi modelli, nomi spesso ambigui, differenti versioni dello stesso modello. 
Caratteristiche in base alle quali scegliere il modello colore:
1. Indipendenza dal dispositivo
2. Uniformità percettiva (uguale distanza fra colori diversi nello stesso sistema colore percepita uguale (non succede nell'rgb))
3. Linearità vs .Non- Linearità (gamma correction andrebbe tolta prima di applicare un filtro)
4. Presenza di singolarità 
5. Costo della trasformazione 
6. Intuitività delle coordinate 
7. Robustezza ai cambiamenti nelle condizioni di imaging (una piccola ombra può far danni)
Slide 55-56.\\
Slide 57. HSI si applica bene per la segmentazione. Ma \textbf{la tinta è ciclica}, come fo? Slide 58, la considero a modulo 360, prendo l'istogramma e lo ripeto. Si analizzano quindi ue cicli affiancati. Valuto le condizioni di imaging e valuto se considerare o no \textbf{anche} l'intensità (nel caso ci siano ombre fastidiose).\\
Slide 61.\\

\subsection{Analisi degli istogrammi colore}
Slide 62.\\
A volte i cluster si “nascondono” quanto sono proiettati su un determinato asse. Per questo spesso si usano molto più feature. Ad esempio per il colore alcuni autori ne hanno usate nove: R,G,B (), Y,I,Q (opponente), H,S,I (polare).

\subsection{Analisi ricorsiva degli istogrammi}
Slide 63-65.\\
- si calcola l'istogramma
- si seleziona i picchi più significativi
- si creano delle immagini binarie corrispondenti ai picchi (se esistono più picchi più
immagini che vengono messe stack)
- si filtrano le immagini binarie per ridurre il rumore
- si mettono le immagini nello stack per l'analisi ricorsiva
- L'analisi dell'istogramma si arresta quando l'istogramma ha un solo picco.
- - L'algoritmo si arresta quando lo stack è vuoto.
Esistono possibile variazioni all'algoritmo base. 

\section{Segmentazione di immagini mediante clustering}
Segmentazione di immagini nello spazio delle caratteristiche (colore, texture,…) mediante clustering.

Segmentazione nello spazio delle caratteristiche (non necessariamente solo colore)

\subsection{Clustrering}
Slide 68.
\definizione{\textbf{Clustering}: partizionamento di un dato insieme di N oggetti in un certo numero M di gruppi, chiamati con il termine inglese cluster, in modo tale che la somiglianza sia massima fra oggetti dello stesso gruppo e sia minima fra oggetti di gruppi diversi.}
Il problema del clustering ha molteplici applicazioni in diverse discipline (machine learning, data mining, data base, ...)\\
Slide 69. Il partizionamento ottimo di un insieme di N oggetti in M cluster risulta essere un problema di tipo \textbf{\textit{NP-completo}}, cioè un problema la cui complessità è una funzione non polinomiale del numero di parametri (in questo caso del numero di oggetti da classificare).\\
Esempio: la suddivisione di 20 oggetti in 4 cluster può essere effettuata in $4.52 * 10^10$ modi diversi (oltre 45 miliardi di possibili soluzioni al problema).\\
Esempio: 20 oggetti in 4 cluster, l'esame di tutte le possibili soluzioni verrebbe compiuto in tempi inaccettabili: anche considerando possibile l'esame di una soluzione in tempi estremamente ridotti, ad esempio 100 msec, l'intera ricerca impiegherebbe più di 52 giorni!
Ulteriore problema: non solo le classi del problema sono sconosciute, ma spesso nemmeno il loro numero è noto.\\
Slide 70, La maggior parte delle soluzioni proposte possono essere ricondotte alle due famiglie:
\begin{description}
    \item[Clustering gerarchico:] attraverso operazioni spesso di tipo “bottom-up” organizza i dati in una sequenza innestata di gruppi che possono essere visualizzati come un dendogramma (albero)
    \item[Clustering partizionale:] individua solitamente attraverso algoritmi euristici iterativi partizioni che minimizzano un dato criterio di clustering: ad esempio la somma dei quadrati degli errori.
\end{description}

\subsubsection{Clustering gerarchico}
Slide 71-72.\\
Gli algoritmi possono essere bottom-up (agglomerativi) o top-down (divisivi).
Nel primo caso si parte cercando di aggregare singoli elementi e ad ogni passo (livello) si
aggregano in cluster gli elementi o i sotto-cluster che sono tra loro più simili rispetto a
una soglia (che dipende dal livello).
Nel secondo (più complesso e quindi meno utilizzato) si parte con un singolo cluster e ad
ogni livello si suddividono in sotto-cluster gli elementi più diversi.
In entrambi i casi il risultato può essere rappresentato attraverso un dendogramma.
I metodi gerarchici permettono di applicare criteri di somiglianza “ad-hoc” per controllare
l’aggregazione e la divisione. Sono quindi da preferirsi quando non si dispone di uno
spazio metrico delle feature\\
Come faccio a trovare la distanza fra due clusters? Diversi metodi: slide 73.\\
1. Collegamento Singolo (Single Linkage): 1. Calcola la distanza tra due cluster come la distanza minima tra i punti di un cluster
e quelli dell'altro.
2. Collegamento Completo (Complete Linkage): 1. Calcola la distanza tra due cluster come la distanza massima tra i punti di un
cluster e quelli dell'altro.
3. Collegamento Medio (Average Linkage): 1. Calcola la distanza tra due cluster come la media delle distanze tra tutti i punti dei due cluster. 4. Collegamento del Centroide (Centroid Linkage): 1. Calcola la distanza tra due cluster utilizzando i centroidi (misure centrali) dei cluster.

\subsection{K-means Clustering}
Inizializzo (inizializzazione random?), assegno ai centroidi i valori di tutti gli altri elementi sulla base del più vicino.\\
Aggiorno le medie, itero, ma la media è sempre la stessa (quindi si ferma? no capito).\\
A seconda dell'inizializzazione, posso avere diverse opzioni di clustering.\\
Slide 74, ripasso per chi non l'ha già visto.\\
La partizione iniziale può essere formata scegliendo a priori un insieme di punti-seme. Un insieme di K pattern che sono ben separati uno dall'altro può essere ottenuto considerando, ad esempio, il centroide di tutti i dati come primo punto-seme e selezionando successivamente punti-seme che sono almeno ad una certa distanza dai punti-seme appena scelti.\\
\textbf{Molto spesso si usa una generazione random (scartando semi troppo “vicini”)}, questa è una miglioria dell'inizializzazione.\\
Alcuni algoritmi sfruttano l'analisi degli istogrammi.\\
Ma quale è il limite del K-means? Che trova clustering troppo ipersferici. Un altro dipende dall'inizializzazione.\\
Come trovo il numero di cluster? O perlomeno essere sicuri che l'inizializzazione sia quella corretta?

Esempio di stage: "sperimentazione di metriche di qualità del risultato del clustering mediante k-means".\\

Consiglio: sempre sovrasegmentare, eventualmente unisco dopo. Es.: tre classi, uomo donna e un'altra, poi eventualmente la integro in una delle altre due (uhm...).

\subsubsection{Isodata Clustering}
Slide 79.\\
Di solito usato per immagini satellitari.\\
L'algoritmo ISODATA è un algoritmo di clustering sequenziale in cui viene implementato il K-means pass. Data la partizione iniziale, pe ogni punto P (rappresentato dal suo vettore delle feature) viene determinato il centroide più vicino.\\
Se 
la distanza è minore di una certa soglia T1, il punto P viene assegnato al cluster e la media del cluster viene aggiornata, 
altrimenti
P diventa il centroide di un nuovo cluster Se la distanza minima fra i centroidi di due cluster è minore di una data T2 soglia i cluster vengono fusi (si ridetermina la posizione dl nuovo centroide).
Il problema del definire correttamente il numero di cluster si converte nel definire il valori per T1 e T2. Essendo sequenziale il risultato dipende grandemente dall'ordine con cui si analizzano i dati

\subsubsection{Segmentazione di immagini mediante clustering}
Slide 80 in poi, seguono esempi. La slide 88 è un esempio di segmentazione di immagini mediante clustering esteticamente uscita male ma utile al suo scopo: ovvero individuare i numeri delle maglie.

Segmentazione di immagini
Scelta delle feature dei pixel
Si possono usare diverse caratteristiche del pixel o del suo intorno (anche congiuntamente).
Ad esempio:
- feature colore /intensità dei pixel
- Caratteristiche di tessitura (texture)
- Coordinate spaziali 
- ...

Slide 91: esempio di scelta delle feature.\\
Es. di prob tipico di clustering: grosse superfici da essere costruite senza discontinuità, es pavimenti di marmi (vero progetto fatto anni fa).

%  fine pausa
ha cercato "bottiglie" su google immagini e ha preso una foto di 6 bottiglie di vetro colorate.\\
domanda da seconda parte dell'esame. Q: se ho delle bottiglie separate su sfondo bianco, come faccio tipo a contarle? A: regioni connesse.\\
\\
Sapendo che \\
- scegli spazio colore che vuoi
- nessuna bottiglia tocca il bordo (ergo, i pixel di bordo sono solo dello sfondo)
- le bottiglie occupano meno del 50\%
- lo sfondo è omogeneo ma può variare (non conosco a priori)
- non so a priori i colori delle bottiglie, solo che è uniforme e diverso dallo sfondo (non conosco a priori)
Come faccio a segmentare le bottiglie?\\
Sono state proposte diverse soluzioni, non ne ho sentita mezza.

\`E andato a prendere la slide dell'uso del gradiente nella sogliatura automatica.
Posso usare anche split e merge (può funzionare o no, ma almeno identifico quante regioni ci sono). E col clustering? So che le bottiglie sono 5, lo sfondo è uno perché non si separa ed è la più grande perché so che occupa più del 50\%. Come faccio a sapere quante sono grandi? Quante piccole? Faccio cluster sulle altre label. Per esercizi simili, il cluster sembra essere the right way.

\section{valutazione degli algoritmi di segmentazione}
Che errori posso avere? Sovrasegmentazione (recuperabile, con un region merging costruibile su misura in base a cosa mi serve), sottosegmentazione (sempre un problema), e boh.\\
Slide 94: quanti tipi di valutazione? Una soggettiva (es, dimostro di averne provate diverse e che soggettivamente viene preferita una soluzione piuttosto di altre), una indiretta (non so se venuto bene o male ma se uso questo spazio colore /algoritmo / filtro rispetto ad un altro esce meglio).
Spesso valutabilem con analisi visiva. Altrimenti faccio un "fantoccio", un patch di textures con cui vedo quanto 

Come valutare il risultato di una segmentazione di basso livello in assenza di misure certe: sono stati suggeriti da Haralik e Shapiro i seguenti criteri euristici:
Le regioni estratte devono essere:
– uniformi ed omogenee. – senza buchi interni. – differenti dalle regioni adiacenti (secondo il criterio di uniformità).
– con confini semplici e non seghettati.
